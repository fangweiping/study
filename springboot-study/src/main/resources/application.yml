server:
  port: 8080
spring:
  application:
    name: springboot-study
  #注册中心
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
  #数据源
  datasource:
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/indexing_learning?characterEncoding=utf-8&serverTimezone=GMT&useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    # Druid的其他属性配置
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒`
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



  #redis配置
#  redis:
##    host: 47.113.111.240
#    host: 127.0.0.1
#    port: 6379
#    timeout: 3        #连接超时时间（毫秒）
#    poolMaxTotal: 10  #连接池中的最大连接数
#    poolMaxIdle : 10  #连接池中的最大空闲连接
#    poolMaxWait : 3   #连接池最大阻塞等待时间（使用负值表示没有限制）

  #集群配置
  redis:
    cluster:
      nodes:
        - 127.0.0.1:6379
    timeout: 3        #连接超时时间（毫秒）
    poolMaxTotal: 10  #连接池中的最大连接数
    poolMaxIdle: 10  #连接池中的最大空闲连接
    poolMaxWait: 3   #连接池最大阻塞等待时间（使用负值表示没有限制）

  rocketmq:
    name-server: 127.0.0.1:9876
    # 生产者
    producer:
      group: boot_group_1
      # 消息发送超时时间
      send-message-timeout: 3000
      # 消息最大长度4M
      max-message-size: 4096
      # 消息发送失败重试次数
      retry-times-when-send-failed: 3
      # 异步消息发送失败重试次数
      retry-times-when-send-async-failed: 2
    # 消费者
    consumer:
      group: boot_group_1
      # 每次提取的最大消息数
      pull-batch-size: 5



#logging:
#  level: info

#org:
#  apache:
#    commons:
#      logging:
#        simplelog:
#          defaultlog: info


#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    passowrd: guest
#    virtualHost: /



